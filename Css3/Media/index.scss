/*参考链接 http://www.ruanyifeng.com/blog/2012/06/sass.html*/
/*sass语法练习*/

/*基本用法*/

//3.1变量
/*Sass允许使用变量，所有变量以$开头*/

$blue: #1875e7;
div{
  color:$blue;
}
/*如果变量需要镶嵌在字符串之中，*/

$side:left;
.rounded{
  border-#{$side}-radius:5px;
}

//3.2计算功能
/*Sass允许在代码中使用算式*/
$var:1;
body{
  margin:(14px/2);
  top: 50px + 100px;
  right: $var * 10%;
}

//3.3嵌套
/*Sass允许选择器嵌套*/
div h1{
  color:red;
}
/*=>可以写成这样*/
div{
  h1{
    color:red;
  }
}
/*属性也可以嵌套，比如border-color属性，可以写成*/
p{
  border:{
    color:red;
  }
}
//注意，border后面必须加上冒号

/*在嵌套的代码块内，可以使用&引用父元素。比如a:hober伪类，可以写成：*/
a{
  &:hover{
    color:#ffb3ff;
  }
}

//3.4注释
/*Sass共有两种注释风格。
标准的CSS注释会保留到编译后的文件 */
//单行注释只保留在Sass源文件中，编译后被省略
/*！重要注释！*/


//代码重用
//4.1继承

/*Sass允许一个选择器，继承另一个选择器。比如,现有class1 */
.class1{
  border:1px solid #ddd;
}
/*class2要继承class1，就要使用@extend命令*/
//class2居然是继承class1，居然是CSS文件中class1,class2 he~he~
.class2{
  @extend .class1;
  font-size:120%;
}

//4.2Mixin
/*Mixin有点像C语言的宏（macro），是可以重用的代码块。*/
/*使用@mixin命令，定义一个代码块。*/
@mixin left{
  float: left;
  margin-left:10px;
}
/*使用@include命令，调用这个mixin。*/
div{
  @include left;
}
/*mixin的强大之处，在于可以指定参数和缺省值*/
@mixin left($value: 10px){
  float: left;
  margin-right:$value;
}
/*使用的时候，根据需要加入参数*/
div{
  @include left(20px);
}
/*下面是一个mixin实例，用来生成浏览器前缀*/
@mixin rounded($vert, $horz, $radius: 10px){
  border-#{$vert}-#{$horz}-radius: $radius;
  -moz-border-radius-#{$vert}#{$horz}:$radius;
  -webkit-border-#{$vert}-#{$horz}-radius: $radius;
}
/*使用的时候，可以像下面这样调用*/
#navbar li {
  @include rounded(top, left);
}
#footer{
  @include rounded(top, left, 5px);
}
//4.3颜色函数 ？？感觉内置的颜色函数有问题
/*Sass提供了一些内置的颜色函数，以便生成系列颜色*/
//lighten(#cc3 10%) //#d6d65c
//darken(#cc3 10%) //#a3a329
//grayscale(#cc3) //#808080
//complement(#cc3) //#33c
body{
  background:{
    color:lighten(#cc3, 10%);
    //lighten(#cc3 10%) //#d6d65c
    //darken(#cc3 10%) //#a3a329
    //grayscale(#cc3) //#808080
    //complement(#cc3) //#33c
  }
}
//4.4插入文件
/*@import命令， 用来插入外部文件*/
/*如果插入的是.css文件，则等同于CSS的import命令*/

//@import "css3media.css";//？？感觉有问题，编译过后css文件中午内容

//高级用法
/*@if可以用来判断*/
p{
  @if 1+1 ==2 {border:1px solid;}
  @if 5<3 {border:2px dotted;}
}
/*配套的还有@elese命令*/
$color:cyan;
a{
  @if lightness($color) > 30%{
    background-color:#000;
  }@else {
    background-color: #fff;
  }
}
//5.2循环语句
/*Sass支持for循环*/
@for $i from 1 to 10{
  .border-#{$i}{
    border:#{$i}px solid blue;
  }
}
$i:6;
@while $i > 0{
  .item-#{$i} {
    width: 2em * $i;
  }
  $i: $i - 2;
}

@each $member in a, b, c, d{
  .#{$member}{
    background-image:url("/image/#{$member}.jpg");
  }
}

//5.3自定义函数
/*Sass允许用户编写自己的函数*/
@function double($n){
  @return $n * 2;
}
#siderbar{
  width: double(5px);
}